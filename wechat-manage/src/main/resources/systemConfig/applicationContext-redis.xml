<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- Redis配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--最大连接数-->
		<property name="maxTotal" value="${redis.maxActive}" />
		<!--最大空闲连接数-->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!--初始化连接数-->
		<property name="minIdle" value="${redis.minIdle}"/>
		<!--最大等待时间-->
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<!--对拿到的connection进行validateObject校验-->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<!--在进行returnObject对返回的connection进行validateObject校验-->
		<property name="testOnReturn" value="${redis.testOnReturn}" />
		<!--定时对线程池中空闲的链接进行validateObject校验-->
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />
	</bean>

	<!--Redis连接池-->
	<!-- 
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<constructor-arg index="1" value="${redis.host}"/>
		<constructor-arg index="2" value="${redis.port}" type="int"/>
		<constructor-arg index="3" value="${redis.host}" type="int"/>
		<constructor-arg index="4" value="${redis.password}"/>
	</bean>
	-->
	
	<!-- Redis管理 -->
	<!-- 
	<bean id="redisManager" class="com.cdeledu.core.redis.JedisManager">
		<property name="jedisPool" ref="jedisPoolConfig" />
	</bean>
	-->
	
	<!-- 
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" scope="singleton">
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.host}"/>
					<constructor-arg index="1" value="${redis.port}"/>
				</bean>
			</list>
		</constructor-arg>
	</bean>
	-->
	
	<!--  spring data redis -->
	<bean id="jeidsConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="true" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}"/>
		<property name="poolConfig" ref="jedisPoolConfig"/>
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jeidsConnectionFactory" />
		<property name="defaultSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
	</bean>
	
	<!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
</beans>
