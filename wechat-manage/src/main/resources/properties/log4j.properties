# **************************************************************
# ----- log4j日志输入配置相关说明 -----
# **************************************************************

# %p 输出优先级，即DEBUG,INFO,WARN,ERROR,FATAL   
# %r 输出自应用启动到输出该log信息耗费的毫秒数   
# %c 输出所属的类目，通常就是所在类的全名   
# %t 输出产生该日志事件的线程名  
# %m 输出代码中指定的信息   
# %n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”   
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MM dd HH:mm:ss,SSS}，
#	输出类似： 2002年10月18日 22：10：28，921 
# %l 输出日志事件的发生位置，及在代码中的行数
# %F 输出代码中的文件名

#log4j提供4种布局:   
# org.apache.log4j.HTMLLayout（以HTML表格形式布局）  
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息  

  
# log4j中有五级logger 输出级别:  
# FATAL 0   (致命错误信息)
# ERROR 3   (错误信息)
# WARN 4   (警告信息)
# INFO 6   (一般信息)
# DEBUG 7 (调试信息)

# **************************************************************
# ----- log4j日志输入配置 -----
# **************************************************************

### 设置日志级别 ###
# Log4j建议只使用四个级别,优先级从高到低分别是ERROR、WARN、INFO、DEBUG#
# 定义了INFO级别,则应用程序中所有DEBUG级别的日志信息将不被打印出来#
log4j.rootLogger=INFO,stdout,info,warn,error,Console,logfile,mail
log4j.rootCategory=error, Console, logfile
########################################################################
###
###  定义设置package(实际的包名)的输出 ###
###
######################################################################## 
log4j.logger.org.springframework=WARN
log4j.logger.org.springframework.web.servlet.handler=INFO
log4j.logger.org.springframework.web.servlet.DispatcherServlet=WARN
log4j.logger.org.springframework.transaction=WARN
log4j.logger.org.springframework.orm=WARN
log4j.logger.org.springframework.scheduling=INFO

log4j.logger.org.mybatis.SQL=DEBUG
log4j.logger.org.mybatis.spring=WARN

log4j.logger.org.apache=INFO
log4j.logger.org.apache.activemq=WARN

log4j.logger.com.google.code.yanf4j=WARN

log4j.logger.providers.XmlConfigurationProvider=WARN

log4j.logger.org.acegisecurity=INFO


########################################################################
###
###  定义sql语句的输出 ###
### 
########################################################################

#控制台输出所有SQL
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG,Console

#执行慢的SQL
log4j.logger.com.alibaba.druid.filter.stat.StatFilter=ERROR,slowsql
log4j.appender.slowsql=org.apache.log4j.DailyRollingFileAppender
log4j.appender.slowsql.File = ${catalina.base}/logs/slow_sql.log
log4j.appender.slowsql.datePattern='.'yyyy-MM-dd
log4j.appender.slowsql.append=true
log4j.appender.slowsql.layout=org.apache.log4j.PatternLayout
log4j.appender.slowsql.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] %m %n


################################################
###
### 输出到console端  ###
###
################################################
log4j.appender.Console=org.apache.log4j.ConsoleAppender  
log4j.appender.Console.Target =System.out
log4j.appender.Console.encoding=UTF-8
log4j.appender.Console.Threshold=INFO
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%-4p,%t] %c{2}.%M:%L - %m%n


#INFO日志
log4j.logger.info=info
log4j.appender.info=org.apache.log4j.DailyRollingFileAppender
log4j.appender.info.File = ${catalina.base}/logs/info.log
log4j.appender.info.datePattern='.'yyyy-MM-dd
log4j.appender.info.append=true
log4j.appender.info.Threshold=INFO
log4j.appender.info.layout=org.apache.log4j.PatternLayout
log4j.appender.info.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %l %m %n

#WARN日志
log4j.appender.warn=org.apache.log4j.DailyRollingFileAppender
log4j.appender.warn.File = ${catalina.base}/logs/warn.log
log4j.appender.warn.datePattern='.'yyyy-MM-dd
log4j.appender.warn.append=true
log4j.appender.warn.Threshold=WARN
log4j.appender.warn.layout=org.apache.log4j.PatternLayout
log4j.appender.warn.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %l %m %n

#ERROR日志
log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
log4j.appender.error.File = ${catalina.base}/logs/error.log
log4j.appender.error.datePattern='.'yyyy-MM-dd
log4j.appender.error.append=true
log4j.appender.error.Threshold=ERROR
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %l %m %n


########################################################################
###
### 日志输出(每天产生一个日志文件) ###
###
########################################################################
log4j.appender.logfile = org.apache.log4j.DailyRollingFileAppender    
log4j.appender.logfile.File =  ${catalina.base}/logs/log.log     
log4j.appender.logfile.DatePattern = '.'yyyy-MM-dd'.log'
log4j.appender.logfile.Threshold = INFO    
log4j.appender.logfile.Encoding=UTF-8 
log4j.appender.logfile.Append=false 
log4j.appender.logfile.layout = org.apache.log4j.PatternLayout    
log4j.appender.logfile.layout.ConversionPattern =%d{yyyy-MM-dd}  [ %t:%r ] - [ %p ]  %m%n   


########################################################################
###
### 发送日志给邮件 ###
###
########################################################################

log4j.appender.mail=org.apache.log4j.net.SMTPAppender
log4j.appender.mail.Threshold=FATAL
log4j.appender.mail.BufferSize=10
log4j.appender.mail.From=duleilewuhen@163.com
log4j.appender.mail.SMTPHost=smtp.sina.com
log4j.appender.mail.Subject=Log4J Message
log4j.appender.mail.To=duleilewuhen@sina.com
log4j.appender.mail.layout=org.apache.log4j.PatternLayout
log4j.appender.mail.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n