<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdeledu.dao.SysRoleMapper">
	
	<sql id="Base_Column_List">
		id, roleCode, roleName, categoryCode, isVisible, allowEdit,
		allowDelete,
		`sequence`, creator, createTime, modifier, updateTime, remark
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultType="com.cdeledu.model.rbac.SysRole">
		select
			<include refid="Base_Column_List" />
		from sys_role where id = #{id}
	</select>
	
	<sql id="findForJdbcParam_body">
		select 
			<include refid="Base_Column_List"/>
		from sys_role
		<where>
			<if test="roleName != null and roleName != '' ">  
				and roleName  LIKE CONCAT(CONCAT('%', #{roleName}),'%') 
			</if>
			<if test="roleCode != null and roleCode != '' ">  
				and roleCode  LIKE CONCAT(CONCAT('%', #{roleCode}),'%') 
			</if>
		</where>
		ORDER BY
		<choose>
			<when test="sortName != null and sortName != '' ">${sortName}</when>
			<otherwise>sequence</otherwise>
		</choose>
		<choose>
			<when test="sortOrder != null and sortOrder != '' ">${sortOrder}</when>
			<otherwise>ASC</otherwise>
		</choose>
	</sql>
	
	<select id="findForJdbcParam" parameterType="com.cdeledu.model.rbac.SysRole"
		resultType="com.cdeledu.model.rbac.SysRole">
		select * from (
			<include refid="findForJdbcParam_body"/>
		)as myTable LIMIT #{startRow},#{rows}
	</select>
	
	<select id="getCountForJdbcParam" parameterType="com.cdeledu.model.rbac.SysRole"
		resultType="java.lang.Integer">
		select count(*) from (
			<include refid="findForJdbcParam_body"/>
		) as myTable
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_role where id = #{id} and id != 1 and allowDelete = 1 and isEnabled = 0
	</delete>
	
	<insert id="insertSelective" parameterType="com.cdeledu.model.rbac.SysRole">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleCode != null and roleCode != '' ">roleCode,</if>
			<if test="roleName != null and roleName != '' ">roleName,</if>
			<if test="categoryCode != null">categoryCode,</if>
			<if test="isVisible != null">isVisible,</if>
			<if test="allowEdit != null">allowEdit,</if>
			<if test="allowDelete != null">allowDelete,</if>
			<if test="sequence != null">`sequence`,</if>
			<if test="creator != null">creator,</if>
			<if test="modifier != null">modifier,</if>
			<if test="remark != null">remark,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleCode != null and roleCode != '' ">#{roleCode},</if>
			<if test="roleName != null and roleName != '' ">#{roleName},</if>
			<if test="categoryCode != null">#{categoryCode},</if>
			<if test="isVisible != null">#{isVisible},</if>
			<if test="allowEdit != null">#{allowEdit},</if>
			<if test="allowDelete != null">#{allowDelete},</if>
			<if test="sequence != null">#{sequence},</if>
			<if test="creator != null">#{creator},</if>
			<if test="modifier != null">#{modifier},</if>
			<if test="remark != null"> #{remark},</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.cdeledu.model.rbac.SysRole">
		update sys_role
		<set>
			<if test="roleCode != null and roleName != '' "> roleCode = #{roleCode}, </if>
			<if test="roleName != null and roleName != '' "> roleName = #{roleName}, </if>
			<if test="categoryCode != null"> categoryCode = #{categoryCode}, </if>
			<if test="isVisible != null"> isVisible = #{isVisible}, </if>
			<if test="isEnabled != null"> isEnabled = #{isEnabled}, </if>
			<if test="allowEdit != null"> allowEdit = #{allowEdit}, </if>
			<if test="allowDelete != null"> allowDelete = #{allowDelete}, </if>
			<if test="sequence != null"> `sequence` = #{sequence}, </if>
			<if test="modifier != null"> modifier = #{modifier}, </if>
			<if test="remark != null"> remark = #{remark}, </if>
		</set>
		where id = #{id} and allowEdit = 1
	</update>
	
	<select id="hasMenuByRole" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		SELECT
			COUNT(*)
		FROM
			sys_role_menu srm
		INNER JOIN sys_menu sm ON sm.id = srm.menuId
		WHERE
			srm.roleId = #{id}  AND sm.isVisible = 1 AND sm.isEnabled = 1 
	</select>
	
	<select id="hasUserByRole" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		SELECT
			COUNT(*)
		FROM
			sys_user_role sur
		INNER JOIN sys_user su ON su.isVisible = 1
		AND su.isEnabled = 1
		WHERE
			sur.roleId = #{id}  
	</select>
	
	<select id="selectByRocode" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*) from sys_role where roleCode = #{id} and isEnabled = 1
	</select>
	
	<insert id="saveRoleAccess" parameterType="com.cdeledu.model.rbac.SysRoleMenu">
		INSERT INTO sys_role_menu(roleId,menuId) VALUES (#{roleId},#{powerId});
	</insert>
	
	<!-- 拥有特定角色的用户 -->
	<sql id="getUserByRole_body">
		SELECT
			su.id,su.userName,su.realName,su.nickName
		FROM
			sys_user su
		INNER JOIN sys_user_role sur ON sur.userId = su.id
		WHERE
			sur.roleId = #{id}
	</sql>
	<select id="getUserByRole" parameterType="com.cdeledu.model.rbac.SysRole" 
		resultType="com.cdeledu.model.rbac.SysUser">
		select * from (
			<include refid="getUserByRole_body"/>
		) as myTable LIMIT #{startRow},#{rows}
	</select>
	
	<select id="countUserByRole" parameterType="java.lang.Integer" 
		resultType="java.lang.Integer">
		select count(*) from (
			<include refid="getUserByRole_body"/>
		) as myTable
	</select>
	
	<!-- 没有拥有特定角色的用户 -->
	<sql id="getUserNoExistRoleByRole_body">
		SELECT
			su.id,su.userName,su.realName,su.nickName
		FROM
			sys_user su
		WHERE 
			su.id NOT IN(SELECT DISTINCT userId FROM sys_user_role WHERE roleId = #{id} )
	</sql>
	
	<select id="getUserNoExistRoleByRole" parameterType="com.cdeledu.model.rbac.SysRole" 
		resultType="com.cdeledu.model.rbac.SysUser">
		select * from (
			<include refid="getUserNoExistRoleByRole_body"/>
		) as myTable LIMIT #{startRow},#{rows}
	</select>
	
	<select id="countUserNoExistRoleByRole" parameterType="java.lang.Integer" 
		resultType="java.lang.Integer">
		select count(*) from (
			<include refid="getUserNoExistRoleByRole_body"/>
		) as myTable
	</select>
	
	<delete id="delRoleAccess" parameterType="int">
		DELETE FROM sys_role_menu WHERE roleId !=1 AND roleId = #{roleId}
	</delete>
	
	<insert id="saveRoleUser" parameterType="com.cdeledu.model.rbac.SysUserRole">
		INSERT INTO sys_user_role(userId,roleId) SELECT #{userId},#{roleId} FROM DUAL  
		WHERE 
			NOT EXISTS (SELECT 1 FROM sys_user_role WHERE userId=#{userId} AND roleId=#{roleId})
			AND EXISTS (SELECT 1 FROM sys_user WHERE id=#{userId})
	</insert>

	<delete id="delRoleUser" parameterType="com.cdeledu.model.rbac.SysUserRole">
		DELETE FROM 
			sys_user_role 
		WHERE 
			userId=#{userId} AND roleId=#{roleId}
	</delete>
	
	<!-- 按角色统计用户数 -->
	<select id="countRoleUser" resultType="com.cdeledu.model.rbac.SysUserRole">
		SELECT 
			sr.id as roleId,sr.roleName,sr.roleCode, 
			IFNULL(
				(SELECT 
					COUNT(*) 
				FROM 
					sys_user_role 
				WHERE 
					roleId = sr.id AND isEnabled =1 
				GROUP BY roleId),0
			)
			as userCount 
		FROM 
			sys_role sr 
	</select>
</mapper>